<launch>
  <!--Variables-->
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="open_rviz" default="true"/>
  <arg name="first_tb3"  default="tb3_0"/>
  <arg name="second_tb3" default="tb3_1"/>

  <arg name="first_tb3_x_pos" default="0.0"/>
  <arg name="first_tb3_y_pos" default="1.0"/>
  <arg name="first_tb3_z_pos" default="0.0"/>
  <arg name="first_tb3_yaw"   default="0.0"/>

  <arg name="second_tb3_x_pos" default="0.0"/>
  <arg name="second_tb3_y_pos" default="-1.0"/>
  <arg name="second_tb3_z_pos" default="0.0"/>
  <arg name="second_tb3_yaw"   default="0.0"/>

  <!--Simulation Environment-->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find multi_robot_challenge)/worlds/dat160_w1.world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <!--First robot-->
  <group ns = "$(arg first_tb3)">
    <param name="robot_description" command="$(find xacro)/xacro $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
      <param name="publish_frequency" type="double" value="50.0" />
      <param name="tf_prefix" value="$(arg first_tb3)" />
    </node>

    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg first_tb3) -x $(arg first_tb3_x_pos) -y $(arg first_tb3_y_pos) -z $(arg first_tb3_z_pos) -Y $(arg first_tb3_yaw) -param robot_description" />
  </group>

  <!--Second robot-->
  <group ns = "$(arg second_tb3)">
    <param name="robot_description" command="$(find xacro)/xacro $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
      <param name="publish_frequency" type="double" value="50.0" />
      <param name="tf_prefix" value="$(arg second_tb3)" />
    </node>

    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg second_tb3) -x $(arg second_tb3_x_pos) -y $(arg second_tb3_y_pos) -z $(arg second_tb3_z_pos) -Y $(arg second_tb3_yaw) -param robot_description" />
  </group>

  <!--map filter-->
  <group ns = "$(arg first_tb3)">
    <node pkg="multi_robot_challenge" name="map_filter" type="map_filter.py" output="screen" />
  </group>

  <group ns = "$(arg second_tb3)">
    <node pkg="multi_robot_challenge" name="map_filter" type="map_filter.py" output="screen" />
  </group>

  <!--SLAM-->
  <include file="$(find multi_robot_challenge)/launch/slam.launch">
    <param name="ns_0" value="$(arg first_tb3)"/>
    <param name="ns_1" value="$(arg second_tb3)"/>
  </include>

  <!--Map merge-->
  <group ns="$(arg first_tb3)/map_merge">
    <param name="init_pose_x"   value="$(arg first_tb3_x_pos)"/>
    <param name="init_pose_y"   value="$(arg first_tb3_y_pos)"/>
    <param name="init_pose_z"   value="$(arg first_tb3_z_pos)"/>
    <param name="init_pose_yaw" value="$(arg first_tb3_yaw)"  />
  </group>

  <group ns="$(arg second_tb3)/map_merge">
    <param name="init_pose_x"   value="$(arg second_tb3_x_pos)"/>
    <param name="init_pose_y"   value="$(arg second_tb3_y_pos)"/>
    <param name="init_pose_z"   value="$(arg second_tb3_z_pos)"/>
    <param name="init_pose_yaw" value="$(arg second_tb3_yaw)"  />
  </group>

  <node pkg="multirobot_map_merge" type="map_merge" respawn="false" name="map_merge" output="screen">
    <param name="robot_map_topic" value="map_filtered"/>
    <param name="robot_namespace" value="tb3"/>
    <param name="merged_map_topic" value="map"/>
    <param name="world_frame" value="map"/>
    <param name="known_init_poses" value="true"/>
    <param name="merging_rate" value="0.5"/>
    <param name="discovery_rate" value="0.05"/>
    <!-- <param name="estimation_rate" value="0.1"/>
    <param name="estimation_confidence" value="1.0"/> -->
  </node>
  <node pkg="tf" type="static_transform_publisher" name="world_to_$(arg first_tb3)_tf_broadcaster"  args="0.4 0.4 0 0 0 0 /map /$(arg first_tb3)/map 100"/>
  <node pkg="tf" type="static_transform_publisher" name="world_to_$(arg second_tb3)_tf_broadcaster" args="0.4 0.4 0 0 0 0 /map /$(arg second_tb3)/map 100"/>

  <!--Navigation-->
  <include file="$(find multi_robot_challenge)/launch/move.launch">
    <arg name="robot_namespace_0" value="tb3_0" />
  </include>
  <include file="$(find multi_robot_challenge)/launch/move.launch">
    <arg name="robot_namespace_0" value="tb3_1" />
  </include>

  <!--AR Track-->
  <include file="$(find multi_robot_challenge)/launch/ar_track.launch">
    <arg name="robot_namespace" value="tb3_0" />
  </include>
  <include file="$(find multi_robot_challenge)/launch/ar_track.launch">
    <arg name="robot_namespace" value="tb3_1" />
  </include>

  <!--Rviz-->
  <group if="$(arg open_rviz)">
    <node pkg="rviz" type="rviz" name="rviz" required="true"
          args="-d $(find multi_robot_challenge)/rviz/turtlebot3_slam.rviz"/>
  </group>

</launch>
